{"version":3,"file":"static/js/928.03e2c84e.chunk.js","mappings":"iTAUIA,EAAMC,EAAAA,GAAAA,GAAH,6EAGA,SAACC,GAAD,OAAWA,EAAMC,eAAMC,EAAAA,EAAAA,IAAZ,iEACA,SAACF,GAAD,OAAWA,EAAMG,mBAK/BC,EAASL,EAAAA,GAAAA,IAAH,gDA2IN,SAASM,EAAKL,GACV,OACI,2CAASA,EAAMM,KAAKN,EAAMO,IAA1B,YAKR,SAASC,EAAQR,GAEb,OAAyBS,EAAAA,EAAAA,UACrB,CAAE,GAAI,SAACL,EAAD,4DACJ,GAAI,SAACA,EAAD,4DACJ,GAAI,SAACA,EAAD,8DAHV,eAAKM,EAAL,UAWA,OAJAC,EAAAA,EAAAA,YAAU,WACNX,EAAMY,WAAU,OAIhB,yBAEQF,EAAOV,EAAMa,OAwBjC,MAnLA,SAAgBb,GACZ,IAAIc,GAAWC,EAAAA,EAAAA,MAETR,IADMS,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAUA,EAAMC,YAC3BC,EAAAA,EAAAA,MAAPZ,IACFa,GAAUC,EAAAA,EAAAA,MAEd,GAAuBZ,EAAAA,EAAAA,WAAS,GAAhC,eAAKa,EAAL,KAAWC,EAAX,KAEIC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UAG9CjB,EAAAA,EAAAA,YAAU,WAEU,OAAZa,IACAA,EAAU,IAGdA,EAAQK,KAAKtB,GACbiB,EAAU,IAAIM,IAAIN,GAClBA,GAAO,OAAOA,GAEdG,aAAaI,QAAQ,OAAON,KAAKO,UAAUR,MAE7C,KAGFb,EAAAA,EAAAA,YAAU,WACN,IAAIsB,EAAMC,YAAW,WAAKX,GAAS,KAAQ,KAC3C,OAAO,WAAKY,aAAaF,MAC3B,CAACX,IAWH,OAA2Bb,EAAAA,EAAAA,UAAS,IAApC,eAAa2B,GAAb,WACIC,GAAO,OAAOrC,EAAMM,MACpBA,GAAOgC,EAAAA,EAAAA,YAAWC,EAAAA,GACtB,GAAmB9B,EAAAA,EAAAA,UAAS,GAA5B,eAAKI,EAAL,KAAS2B,EAAT,KACA,GAAyB/B,EAAAA,EAAAA,WAAS,GAAlC,eAAKgC,EAAL,KAAY7B,EAAZ,KASA,OACI,iBAAK8B,UAAU,YAAf,WACM,SAAC,EAAD,CAAK,eAAK,MAAM,eAAK,KAAKA,UAAU,QAApC,qBACU,IAARpB,GACM,gBAAKoB,UAAU,YAAYC,MAAM,eAAjC,UACE,2GAEF,MAER,kBAAOC,SAAU,SAACC,GAAKT,EAAWS,EAAEC,OAAOH,WAE3C,iBAAKD,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACI,gBAAKK,IAAKC,EAAAA,KAAAA,CAAQ,KAAShD,EAAMiD,MAAM1C,GAAI2C,KAAMC,MAAM,YAE3D,iBAAKT,UAAU,gBAAf,WACE,eAAIA,UAAU,OAAd,SAAsB1C,EAAMiD,MAAM1C,GAAI6C,SACtC,uBAAIpD,EAAMiD,MAAM1C,GAAI8C,WACpB,uBAAIrD,EAAMiD,MAAM1C,GAAI+C,SACpB,0CAAQhD,EAAKC,GAAb,aACA,SAACF,EAAD,CAAMC,KAAMN,EAAMM,KAAMC,GAAIA,KAC5B,mBAAQmC,UAAU,iBAAiBa,QA3BnC,WACNlB,EAAQ9B,GAAI,IACX8B,EAAQ9B,IAAO,EACfP,EAAMwD,QAAQnB,KAwBT,uCACA,mBAAQK,UAAU,iBAAiBa,QAAS,WACxCzC,EAAS,CAAE2C,KAAK,WAAYC,QAAS1D,EAAMiD,MAAM1C,KACjDa,EAAQS,KAAK,UAFjB,uCAIA,mBAAQa,UAAU,iBAAiBa,QAAS,WAAKnC,EAAQuC,UAAzD,uCACA,mBAAQjB,UAAU,iBAAiBa,QAAS,WAAKnC,EAAQS,KAAK,cAA9D,6CAIJ,UAAC+B,EAAA,EAAD,CAAKlB,UAAU,OAAOmB,QAAQ,OAAOC,iBAAiB,SAAtD,WACE,SAACF,EAAA,OAAD,WACE,SAACA,EAAA,OAAD,CAAUG,SAAS,SAASR,QAAS,WAAK3C,GAAU,GAAQ4B,EAAO,IAAnE,uBAEF,SAACoB,EAAA,OAAD,WACE,SAACA,EAAA,OAAD,CAAUG,SAAS,SAASR,QAAS,WAAK3C,GAAU,GAAQ4B,EAAO,IAAnE,yBAEF,SAACoB,EAAA,OAAD,WACE,SAACA,EAAA,OAAD,CAAUG,SAAS,SAASR,QAAS,WAAK3C,GAAU,GAAQ4B,EAAO,IAAnE,4BAIH,SAACwB,EAAA,EAAD,CAAeC,GAAIxB,EAAQyB,WAAW,SAASC,QAAS,IAAxD,UACK,SAAC3D,EAAD,CAASK,IAAKA,EAAKD,UAAWA,OAGlC,6DACD,SAACwD,EAAA,EAAD,UACiB,MAAX5C,EACGA,EAAQ6C,KAAI,SAACC,EAAKC,GAAQ,OAC1B,UAACC,EAAA,EAAD,CAAiBjB,QAAU,WAAMnC,EAAQS,KAAK,WAAWyC,IAAzD,WACG,SAACE,EAAA,MAAD,CAAUX,QAAQ,MAAMd,IAAOC,EAAAA,KAAAA,CAAQ,KAAShD,EAAMiD,MAAMqB,GAAMpB,QAClE,UAACsB,EAAA,OAAD,YACE,SAACA,EAAA,QAAD,UAAaxE,EAAMiD,MAAMqB,GAAMlB,SAC/B,SAACoB,EAAA,OAAD,UACIxE,EAAMiD,MAAMqB,GAAMjB,cAGxB,SAACmB,EAAA,SAAD,WACE,kBAAO9B,UAAU,aAAjB,UACG,mBAAQA,UAAU,iBAAiBa,QAAS,WACzC/B,EAAUA,EAAQiD,QAAO,SAAA5B,GAAC,OAAGA,IAAMyB,KACnC3C,aAAaI,QAAQ,OAAON,KAAKO,UAAUR,KAF9C,gCAVI+C,MAkBZ","sources":["Detail.js"],"sourcesContent":["import React, { useState,useEffect,useContext } from 'react';\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nimport styled,{ css } from 'styled-components';\r\nimport './Detail.scss';\r\nimport { axios } from 'axios';\r\nimport { leftCon } from './App.js';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Container,Navbar,Nav,NavDropdown,FormControl,Button,Form,CardGroup,Card} from 'react-bootstrap';\r\nimport { connect,useSelector,useDispatch } from 'react-redux';\r\n\r\nlet 새박스 = styled.h4`\r\n    font-size: 30px;\r\n    padding: 20px;\r\n    ${ (props) => props.변화 && css`font-size: 100px;\r\n        color: ${ (props) => props.색상 }\r\n    `}\r\n\r\n`;\r\n\r\nlet TabBox = styled.div`\r\n    height: 400px;\r\n\r\n\r\n`\r\n\r\n\r\nfunction Detail(props){\r\n    let dispatch = useDispatch();\r\n    let goods = useSelector((state)=> state.reducer);\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    //let [alert,setAlert] = useState(document.querySelector('.my-alert2'));\r\n    let [alert,setAlert] = useState(true);\r\n\r\n    let seenArr = JSON.parse(localStorage.getItem('seen'));\r\n\r\n    /*시작할 떄 한번 실행 */\r\n    useEffect(()=>{\r\n\r\n        if( seenArr === null){\r\n            seenArr = [];\r\n        }\r\n\r\n        seenArr.push(id);\r\n        seenArr = new Set(seenArr);\r\n        seenArr = [...seenArr];\r\n\r\n        localStorage.setItem('seen',JSON.stringify(seenArr));\r\n\r\n    },[]);\r\n\r\n\r\n    useEffect(()=>{\r\n        let 타이머 = setTimeout(()=>{setAlert(false)},2000);\r\n        return ()=>{clearTimeout(타이머)}\r\n    },[alert]);\r\n\r\n        /*return function 함수명(){\r\n            //컴포넌트가 사라질 때 코드 실행 (언마운트시)\r\n        }\r\n         이거 아냐 위처럼 플래그 만들기로 껐다 켰다 해야됨\r\n            let 타이머 =\r\n            setTimeout(()=>{\r\n               alert.setAttribute('style','visibility: hidden')\r\n            },200)*/\r\n\r\n    let [content,setContent] = useState(\"\");\r\n    let leftArr = [...props.left];\r\n    let left = useContext(leftCon);\r\n    let [tab,setTab] = useState(0);\r\n    let [yesTab,setYesTab] = useState(false);\r\n\r\n\r\n    const order = ()=>{\r\n         if(leftArr[id]>0){\r\n             leftArr[id] -= 1;\r\n             props.setLeft(leftArr);\r\n          }\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n              <새박스 색상 = 'red' 변화 = 'on' className=\"black\">Detail</새박스>\r\n              { alert===true\r\n                    ? <div className=\"my-alert2\" value=\"야호\">\r\n                        <p>재고가 얼마 남지 않았습니다!!</p>\r\n                      </div>\r\n                    : null\r\n              }\r\n              <input onChange={(e)=>{setContent(e.target.value)}}/>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src={require(\"./img/\"+props.shoes[id].img)} width=\"100%\" />\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                  <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\r\n                  <p>{props.shoes[id].content}</p>\r\n                  <p>{props.shoes[id].price}</p>\r\n                  <p>재고: {left[id]}개</p>\r\n                  <Left left={props.left} id={id}/>\r\n                  <button className=\"btn btn-danger\" onClick={order}>주문하기</button>\r\n                  <button className=\"btn btn-danger\" onClick={()=>{\r\n                      dispatch({ type:\"addGoods\", payload: props.shoes[id] })\r\n                      history.push(\"/cart\")}\r\n                  }>장바구니</button>\r\n                  <button className=\"btn btn-danger\" onClick={()=>{history.goBack()}}>주문취소</button>\r\n                  <button className=\"btn btn-danger\" onClick={()=>{history.push(\"/anywhere\")}}>아무거나</button>\r\n                </div>\r\n              </div>\r\n\r\n              <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-0\" onClick={()=>{setYesTab(false); setTab(0); }}>Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-1\" onClick={()=>{setYesTab(false); setTab(1);}}>Option 2</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"link-2\" onClick={()=>{setYesTab(false); setTab(2);}}>Option 3</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n\r\n               <CSSTransition in={yesTab} classNames=\"yesTab\" timeout={500}>\r\n                    <TabCont tab={tab} setYesTab={setYesTab}/>\r\n               </CSSTransition>\r\n\r\n                <p>최근 본 상품</p>\r\n               <CardGroup>\r\n                   { seenArr != null\r\n                      ? seenArr.map((each,idx)=>{ return (\r\n                        <Card key= {idx} onClick= {()=>{ history.push(\"/detail/\"+each)}}>\r\n                           <Card.Img variant=\"top\" src= { require(\"./img/\"+props.shoes[each].img)} />\r\n                           <Card.Body>\r\n                             <Card.Title>{props.shoes[each].title}</Card.Title>\r\n                             <Card.Text>\r\n                                {props.shoes[each].content}\r\n                             </Card.Text>\r\n                           </Card.Body>\r\n                           <Card.Footer>\r\n                             <small className=\"text-muted\">\r\n                                <button className=\"btn btn-danger\" onClick={()=> {\r\n                                   seenArr = seenArr.filter(e=> e !== each);\r\n                                   localStorage.setItem('seen',JSON.stringify(seenArr));\r\n                                }}>삭제</button>\r\n                             </small>\r\n                           </Card.Footer>\r\n                         </Card>\r\n                        )})\r\n                      : null\r\n                   }\r\n               </CardGroup>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n    function Left(props) {\r\n        return (\r\n            <p>재고 : {props.left[props.id]}개</p>\r\n\r\n        )\r\n    }\r\n\r\n    function TabCont(props) {\r\n\r\n        let [tabDiv,setTabDiv] = useState(\r\n            { 0 : <TabBox>0탭의 내용입니다.</TabBox>,\r\n              1 : <TabBox>1탭의 내용입니다.</TabBox>,\r\n              2 : <TabBox>2탭의 내용입니다.</TabBox>\r\n            }\r\n        );\r\n\r\n        useEffect(()=>{\r\n            props.setYesTab(true);\r\n        });\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    tabDiv[props.tab]\r\n                }\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n\r\n/*        if(props.tab===0){\r\n           return <div>0탭의 내용입니다.</div>\r\n        }else if(props.tab===1){\r\n           return <div>1탭의 내용입니다.</div>\r\n        }else if(props.tab===2){\r\n           return <div>2탭의 내용입니다.</div>\r\n        }*/\r\n    }//tabContent 종료료\r\n\r\n/*   function detailRedux(state) {\r\n        return{\r\n            goods : state.reducer\r\n        }\r\n    }*/\r\n\r\n//export default connect(detailRedux)(Detail);\r\nexport default Detail;\r\n"],"names":["새박스","styled","props","변화","css","색상","TabBox","Left","left","id","TabCont","useState","tabDiv","useEffect","setYesTab","tab","dispatch","useDispatch","useSelector","state","reducer","useParams","history","useHistory","alert","setAlert","seenArr","JSON","parse","localStorage","getItem","push","Set","setItem","stringify","타이머","setTimeout","clearTimeout","setContent","leftArr","useContext","leftCon","setTab","yesTab","className","value","onChange","e","target","src","require","shoes","img","width","title","content","price","onClick","setLeft","type","payload","goBack","Nav","variant","defaultActiveKey","eventKey","CSSTransition","in","classNames","timeout","CardGroup","map","each","idx","Card","filter"],"sourceRoot":""}